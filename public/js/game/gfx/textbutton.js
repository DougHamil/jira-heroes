// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['gfx/styles', 'util', 'pixi', 'tween'], function(styles, Util) {
    var PADDING, TextButton;
    PADDING = 20;
    return TextButton = (function(_super) {
      __extends(TextButton, _super);

      function TextButton(text) {
        TextButton.__super__.constructor.apply(this, arguments);
        this.text = new PIXI.Text(text, styles.TEXT);
        this.bg = new PIXI.Graphics();
        this.width = this.text.width + PADDING;
        this.height = this.text.height + PADDING;
        this.bg.beginFill(styles.BUTTON_COLOR);
        this.bg.drawRect(0, 0, this.width, this.height);
        this.disableBg = new PIXI.Graphics();
        this.disableBg.beginFill(styles.BUTTON_COLOR_DISABLED);
        this.disableBg.drawRect(0, 0, this.width, this.height);
        this.text.anchor = {
          x: 0.5,
          y: 0.5
        };
        this.bg.anchor = {
          x: 0.5,
          y: 0.5
        };
        this.text.position = {
          x: this.width / 2,
          y: this.height / 2
        };
        this.disableBg.anchor = {
          x: 0.5,
          y: 0.5
        };
        this.addChild(this.disableBg);
        this.addChild(this.bg);
        this.addChild(this.text);
        this.enabled = true;
        this.hitArea = new PIXI.Rectangle(0, 0, this.width, this.height);
        this.interactive = true;
      }

      TextButton.prototype.disable = function() {
        this.bg.visible = false;
        return this.enabled = false;
      };

      TextButton.prototype.enable = function() {
        this.bg.visible = true;
        return this.enabled = true;
      };

      TextButton.prototype.onClick = function(callback) {
        var _this = this;
        return this.click = function() {
          if (_this.enabled) {
            return callback(_this);
          }
        };
      };

      return TextButton;

    })(PIXI.DisplayObjectContainer);
  });

}).call(this);
