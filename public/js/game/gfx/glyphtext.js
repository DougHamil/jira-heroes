// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['gfx/styles', 'util', 'pixi', 'tween'], function(styles, Util) {
    var GLYPHS, GlyphText, STYLE;
    STYLE = styles.TEXT;
    GLYPHS = {
      'coin': '/media/images/icons/coin.png'
    };
    return GlyphText = (function(_super) {
      __extends(GlyphText, _super);

      function GlyphText(text) {
        GlyphText.__super__.constructor.call(this);
        this.setText(text);
      }

      GlyphText.prototype.setText = function(text) {
        var chunk, glyph, lastSprite, sprite, textChunks, texture, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _results;
        if (this.sprites != null) {
          _ref = this.sprites;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            sprite = _ref[_i];
            this.removeChild(sprite);
          }
        }
        textChunks = text.split(' ');
        this.sprites = [];
        this.width = 0;
        for (_j = 0, _len1 = textChunks.length; _j < _len1; _j++) {
          chunk = textChunks[_j];
          sprite = null;
          if (/^<\w+>$/.test(chunk)) {
            glyph = chunk.replace(/[<>]/g, '');
            texture = PIXI.Texture.fromImage(GLYPHS[glyph]);
            sprite = new PIXI.Sprite(texture);
            sprite.isGlyph = true;
          } else {
            chunk += ' ';
            if (this.sprites.length > 0 && this.sprites[this.sprites.length - 1].isGlyph) {
              chunk = ' ' + chunk;
            }
            sprite = new PIXI.Text(chunk, STYLE);
            sprite.isGlyph = false;
          }
          if (this.sprites.length > 0) {
            lastSprite = this.sprites[this.sprites.length - 1];
            sprite.height = lastSprite.height;
            this.height = sprite.height;
            if (sprite.isGlyph) {
              sprite.width = sprite.height;
            }
            sprite.position = {
              x: lastSprite.position.x + lastSprite.width,
              y: 0
            };
          }
          this.sprites.push(sprite);
        }
        _ref1 = this.sprites;
        _results = [];
        for (_k = 0, _len2 = _ref1.length; _k < _len2; _k++) {
          sprite = _ref1[_k];
          this.width += sprite.width;
          _results.push(this.addChild(sprite));
        }
        return _results;
      };

      return GlyphText;

    })(PIXI.DisplayObjectContainer);
  });

}).call(this);
