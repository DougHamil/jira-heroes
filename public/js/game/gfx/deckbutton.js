// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['gfx/styles', 'util', 'engine', 'pixi', 'tween'], function(STYLES, Util, engine) {
    var CARD_HEIGHT, CARD_WIDTH, DeckButton, HIGHLIGHT_WIDTH;
    HIGHLIGHT_WIDTH = 10;
    CARD_WIDTH = 300;
    CARD_HEIGHT = 100;
    return DeckButton = (function(_super) {
      __extends(DeckButton, _super);

      function DeckButton(deck, hero) {
        var texture;
        DeckButton.__super__.constructor.apply(this, arguments);
        if (hero.media.icon != null) {
          texture = PIXI.Texture.fromImage(hero.media.icon);
          this.icon = new PIXI.Sprite(texture);
          this.icon.position = {
            x: 0,
            y: 0
          };
          this.icon.scale = {
            x: 0.25,
            y: 0.25
          };
        }
        this.name = new PIXI.Text(deck.name, STYLES.TEXT);
        this.cardText = new PIXI.Text(deck.cards.length + " Cards", STYLES.TEXT);
        this.bg = new PIXI.Graphics();
        this.bg.width = CARD_WIDTH;
        this.bg.height = CARD_HEIGHT;
        this.bg.beginFill(STYLES.BUTTON_COLOR);
        this.bg.drawRect(0, 0, this.bg.width, this.bg.height);
        this.highlight = new PIXI.Graphics();
        this.highlight.beginFill(STYLES.HIGHLIGHT_COLOR);
        this.highlight.drawRect(-HIGHLIGHT_WIDTH, -HIGHLIGHT_WIDTH, this.bg.width + HIGHLIGHT_WIDTH * 2, this.bg.height + HIGHLIGHT_WIDTH * 2);
        this.highlight.visible = false;
        this.name.position = {
          x: 0,
          y: this.bg.height - this.name.height
        };
        this.cardText.position = {
          x: this.bg.width - this.cardText.width,
          y: 0
        };
        this.cont = new PIXI.DisplayObjectContainer();
        this.cont.addChild(this.highlight);
        this.cont.addChild(this.bg);
        this.cont.addChild(this.cardText);
        if (this.icon != null) {
          this.cont.addChild(this.icon);
        }
        this.cont.addChild(this.name);
        this.addChild(this.cont);
        this.hitArea = new PIXI.Rectangle(0, 0, this.bg.width, this.bg.height);
        this.interactive = true;
        this.width = this.bg.width;
        this.height = this.bg.height;
      }

      DeckButton.prototype.setHighlight = function(enabled) {
        return this.highlight.visible = enabled;
      };

      DeckButton.prototype.onClick = function(callback) {
        var _this = this;
        return this.click = function() {
          return callback(_this);
        };
      };

      return DeckButton;

    })(PIXI.DisplayObjectContainer);
  });

}).call(this);
