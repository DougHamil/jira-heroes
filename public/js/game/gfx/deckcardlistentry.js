// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['gfx/styles', 'util', 'engine', 'pixi', 'tween'], function(STYLES, Util, engine) {
    var DeckCardListEntry;
    return DeckCardListEntry = (function(_super) {
      __extends(DeckCardListEntry, _super);

      function DeckCardListEntry(width, height, card) {
        DeckCardListEntry.__super__.constructor.apply(this, arguments);
        this.countTxt = new PIXI.Text('1', STYLES.TEXT);
        this.energyTxt = new PIXI.Text(card.energy, STYLES.TEXT);
        this.nameTxt = new PIXI.Text(card.displayName, STYLES.TEXT);
        this.bg = new PIXI.Graphics();
        this.bg.width = width;
        this.bg.height = height;
        this.bg.beginFill(STYLES.BUTTON_COLOR);
        this.bg.drawRect(0, 0, this.bg.width, this.bg.height);
        this.nameTxt.position = {
          x: this.countTxt.width + 10,
          y: 0
        };
        this.addChild(this.bg);
        this.addChild(this.countTxt);
        this.addChild(this.energyTxt);
        this.addChild(this.nameTxt);
        this.setCount(1);
      }

      DeckCardListEntry.prototype.setCount = function(count) {
        this.countTxt.setText(count.toString());
        return this.countTxt.position = {
          x: this.bg.width - this.countTxt.width,
          y: 0
        };
      };

      return DeckCardListEntry;

    })(PIXI.DisplayObjectContainer);
  });

}).call(this);
