// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['gfx/styles', 'gfx/battlebutton', 'util', 'engine', 'pixi', 'tween'], function(STYLES, BattleButton, Util, engine) {
    var BATTLE_BUTTON_PADDING, BattlePicker, HEIGHT, WIDTH;
    HEIGHT = engine.HEIGHT - 100;
    WIDTH = engine.WIDTH - engine.WIDTH / 4;
    BATTLE_BUTTON_PADDING = 10;
    /*
    # Provides an interface for selecting a battle
    */

    return BattlePicker = (function(_super) {
      __extends(BattlePicker, _super);

      function BattlePicker(battles, users) {
        var battle, battleBtn, onBattleButtonClicked, y, _i, _len, _ref,
          _this = this;
        this.battles = battles;
        this.users = users;
        BattlePicker.__super__.constructor.apply(this, arguments);
        this.battleButtons = {};
        y = 0;
        onBattleButtonClicked = function(battleId) {
          return function() {
            if (_this.onBattlePickedCallback != null) {
              return _this.onBattlePickedCallback(battleId);
            }
          };
        };
        _ref = this.battles;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          battle = _ref[_i];
          battleBtn = new BattleButton(battle, this.users);
          this.addChild(battleBtn);
          battleBtn.position = {
            x: 0,
            y: y
          };
          battleBtn.onClick(onBattleButtonClicked(battle._id));
          y += battleBtn.height + BATTLE_BUTTON_PADDING;
          this.battleButtons[battle._id] = battleBtn;
        }
      }

      BattlePicker.prototype.onBattlePicked = function(onBattlePickedCallback) {
        this.onBattlePickedCallback = onBattlePickedCallback;
      };

      BattlePicker.prototype.setHighlight = function(battleId, highlight) {
        return this.battleButtons[battleId].setHighlight(highlight);
      };

      return BattlePicker;

    })(PIXI.DisplayObjectContainer);
  });

}).call(this);
