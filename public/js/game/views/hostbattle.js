// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'jiraheroes', 'gui', 'engine', 'pixi'], function($, JH, GUI, engine) {
    var HostBattle;
    return HostBattle = (function(_super) {
      __extends(HostBattle, _super);

      function HostBattle(manager, myStage) {
        var _this = this;
        this.manager = manager;
        this.myStage = myStage;
        HostBattle.__super__.constructor.apply(this, arguments);
        this.heading = new PIXI.Text('Host a Battle', GUI.STYLES.HEADING);
        this.subheading = new PIXI.Text('Pick a deck to battle with:', GUI.STYLES.TEXT);
        this.subheading.position = {
          x: 20,
          y: this.heading.position.y + this.heading.height + 5
        };
        this.backBtn = new GUI.TextButton('Back');
        this.backBtn.position = {
          x: 20,
          y: engine.HEIGHT - this.backBtn.height - 20
        };
        this.backBtn.onClick(function() {
          return _this.manager.activateView('MainMenu');
        });
        this.addChild(this.heading);
        this.addChild(this.subheading);
        this.addChild(this.backBtn);
      }

      HostBattle.prototype.hostBattleWithDeck = function(deckId) {
        var _this = this;
        if (this.decks[deckId] != null) {
          return JH.HostBattle(deckId, function(battle) {
            return _this.manager.activateView('Battle', battle);
          });
        }
      };

      HostBattle.prototype.activate = function() {
        var activate,
          _this = this;
        activate = function(decks) {
          var deck, _i, _len;
          decks = decks.filter(function(d) {
            return d.cards.length === 30;
          });
          if (decks.length > 0) {
            _this.decks = {};
            for (_i = 0, _len = decks.length; _i < _len; _i++) {
              deck = decks[_i];
              _this.decks[deck._id] = deck;
            }
            _this.deckList = new GUI.DeckPicker(decks, JH.heroes);
            _this.deckList.position = {
              x: 0,
              y: 100
            };
            _this.deckList.onDeckPicked(function(deckId) {
              return _this.hostBattleWithDeck(deckId);
            });
            _this.addChild(_this.deckList);
          } else {
            _this.deckList = new PIXI.Text('You do not own any full decks', GUI.STYLES.WARNING);
            _this.deckList.position = {
              x: 0,
              y: 100
            };
            _this.addChild(_this.deckList);
          }
          return _this.myStage.addChild(_this);
        };
        return JH.GetAllDecks(activate);
      };

      HostBattle.prototype.deactivate = function() {
        this.removeChild(this.deckList);
        return this.myStage.removeChild(this);
      };

      return HostBattle;

    })(PIXI.DisplayObjectContainer);
  });

}).call(this);
