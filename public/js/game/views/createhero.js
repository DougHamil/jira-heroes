// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'jiraheroes', 'engine', 'gui', 'pixi'], function($, JH, engine, GUI) {
    var BACKGROUND_TEXTURE, CreateHeroMenu;
    BACKGROUND_TEXTURE = PIXI.Texture.fromImage('/media/images/backgrounds/heromenu.png');
    return CreateHeroMenu = (function(_super) {
      __extends(CreateHeroMenu, _super);

      function CreateHeroMenu(manager, stage) {
        var _this = this;
        this.manager = manager;
        CreateHeroMenu.__super__.constructor.apply(this, arguments);
        this.heroNameEl = $("#heroName");
        this.heroNameEl.hide();
        this.heroNameText = $("#heroNameText");
        this.heroNameSave = $("#heroNameSave");
        this.heroNameCancel = $("#heroNameCancel");
        this.myStage = stage;
        this.bgSprite = new PIXI.Sprite(BACKGROUND_TEXTURE);
        this.menuText = new PIXI.Text('Create a Hero', GUI.STYLES.HEADING);
        this.backBtn = new GUI.TextButton('Back');
        this.backBtn.position = {
          x: engine.WIDTH / 2,
          y: (engine.HEIGHT / 2) + 2 * this.backBtn.height
        };
        this.backBtn.onClick(function() {
          return _this.manager.activateView('HeroMenu');
        });
        this.addChild(this.menuText);
        this.addChild(this.backBtn);
        this.heroNameSave.click(function() {
          return _this.createHero();
        });
        this.heroNameCancel.click(function() {
          return _this.heroNameEl.hide();
        });
        JH.GetHeroMetaData(function(classes) {
          var btn, heroClass, nameHeroFunc, x, y, _i, _len, _results;
          x = 50;
          y = 100;
          nameHeroFunc = function(clazz) {
            return function() {
              _this.heroNameEl.show();
              return _this.selectedClass = clazz;
            };
          };
          _results = [];
          for (_i = 0, _len = classes.length; _i < _len; _i++) {
            heroClass = classes[_i];
            btn = new GUI.HeroButton({
              name: '',
              "class": heroClass.name,
              media: heroClass.media
            });
            btn.position = {
              x: x,
              y: y
            };
            btn.onClick(nameHeroFunc(heroClass));
            x += 300;
            _results.push(_this.addChild(btn));
          }
          return _results;
        });
      }

      CreateHeroMenu.prototype.createHero = function() {
        var name,
          _this = this;
        if (this.selectedClass != null) {
          name = this.heroNameText.val();
          return JH.CreateHero(name, this.selectedClass.name, function(heroId) {
            console.log("Created hero " + heroId);
            _this.heroNameEl.hide();
            _this.heroNameText.val('');
            return _this.manager.activateView('HeroMenu');
          });
        }
      };

      CreateHeroMenu.prototype.deactivate = function() {
        return this.myStage.removeChild(this);
      };

      CreateHeroMenu.prototype.activate = function() {
        return this.myStage.addChild(this);
      };

      return CreateHeroMenu;

    })(PIXI.DisplayObjectContainer);
  });

}).call(this);
